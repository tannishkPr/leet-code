class Solution {
    List<List<Integer>> combinations = new ArrayList<>();
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
      helper(candidates, target, 0, 0, new ArrayList<>());
      return combinations;
    }
    private void helper(int[] candidates, int target, int index, int sum, List<Integer> list) {
        if(sum > target)
            return;
        if(target == sum){
            combinations.add(new ArrayList<>(list));
        }
        for(int i=index;i<candidates.length;i++){
            list.add(candidates[i]);
            helper(candidates,target,i,sum+candidates[i],list);
            list.remove(list.size()-1);
        }
    }

    
}
